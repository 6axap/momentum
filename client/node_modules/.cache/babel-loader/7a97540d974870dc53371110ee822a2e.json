{"ast":null,"code":"var _jsxFileName = \"/Users/bayarbileg/Projects/tests/express-test/client/src/components/timer.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isActive: false,\n      minutes: 0,\n      seconds: 5\n    };\n    this.timer = null;\n    this.startTimer = this.startTimer.bind(this);\n    this.toggleisActive = this.toggleisActive.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n  toggleisActive() {\n    const isActive = this.state.isActive;\n    this.setState({\n      isActive: !isActive\n    });\n  }\n\n  startTimer() {\n    const seconds = this.state.seconds;\n    const minutes = this.state.minutes;\n    const isActive = this.state.isActive;\n\n    if (!isActive && (minutes != 0 || seconds != 0)) {\n      this.timer = setInterval(this.tick, 1000);\n      this.toggleisActive();\n    } else {\n      clearInterval(this.timer);\n      this.toggleisActive();\n    }\n  }\n\n  tick() {\n    const seconds = this.state.seconds - 1;\n    const minutes = this.state.minutes;\n    this.setState({\n      seconds: seconds\n    });\n\n    if (seconds < 0 && minutes != 0) {\n      this.setState({\n        minutes: minutes - 1\n      });\n      this.setState({\n        seconds: 59\n      });\n    } else if (seconds == 0 && minutes == 0) {\n      clearInterval(this.timer);\n    }\n  }\n\n  render() {\n    const isActive = this.state.isActive;\n    let minutes = this.state.minutes.toString();\n    let seconds = this.state.seconds.toString();\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [minutes, \":\", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.startTimer,\n        children: isActive ? 'Pause' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/bayarbileg/Projects/tests/express-test/client/src/components/timer.js"],"names":["React","Timer","Component","constructor","props","state","isActive","minutes","seconds","timer","startTimer","bind","toggleisActive","tick","setState","setInterval","clearInterval","render","toString"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isActive: false,\n      minutes: 0,\n      seconds: 5\n    }\n    this.timer = null;\n    this.startTimer = this.startTimer.bind(this);\n    this.toggleisActive = this.toggleisActive.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n  \n  toggleisActive() {\n    const isActive = this.state.isActive;\n    this.setState({ isActive: !isActive });\n  }\n\n  startTimer() {\n    const seconds = this.state.seconds;\n    const minutes = this.state.minutes;\n    const isActive = this.state.isActive;\n    if (!isActive && (minutes != 0 || seconds != 0)) {\n      this.timer = setInterval(this.tick, 1000);\n      this.toggleisActive();\n    } else {\n        clearInterval(this.timer);\n        this.toggleisActive();\n    }\n  }\n  \n  tick() {\n    const seconds = this.state.seconds - 1;\n    const minutes = this.state.minutes;\n    this.setState({ seconds: seconds })\n    if (seconds < 0 && minutes != 0) {\n      this.setState({ minutes: minutes - 1 })\n      this.setState({ seconds: 59 })\n    } else if (seconds == 0 && minutes == 0) {\n      clearInterval(this.timer);\n    }\n  }\n\n  render() {\n    const isActive = this.state.isActive;\n    let minutes = this.state.minutes.toString();\n    let seconds = this.state.seconds.toString();\n    minutes = (minutes < 10) ? '0' + minutes : minutes;\n    seconds = (seconds < 10) ? '0' + seconds : seconds;\n    return (\n      <div className=\"timer\">\n        <p>{minutes}:{seconds}</p>\n        <button onClick={this.startTimer}>\n          {isActive ? 'Pause' : 'Start'}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Timer"]},"metadata":{},"sourceType":"module"}